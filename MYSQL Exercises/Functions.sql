-- NAME:EFE CAN NERMAN...
-- ID:.17070006023..
-- SE2222 LAB PRACTICE (FUNCTIONS) 
-- USE THIS SQL FILE AS TEMPLATE.  
-- YOU WILL SUBMIT 1 FILE. 
-- SUBMIT YOUR FILES LIKE [YOURID].SQL
-- YOUR SUBMITTED SQL FILE MUST BEGIN WITH COMMENT LINES CONTAINING YOUR NAME AND ID.
-- OTHERWISE WILL NOT BE EVALUATED.
-- USE DEMO.SQL DEFINITIONS AS WE HAVE DONE IN LAB SESSIONS
-- ______________________________________________________________________________
-- 1.
-- CREATE A FUNCTION NAMED ADD5 THAT ADDS 5 TO A GIVEN INTEGER
Create FUNCTION ADD5(number INT) 
RETURNS INT DETERMINISTIC 
RETURN number+5;




-- TEST YOUR FUNCTION
SELECT ADD5(3);

-- 2.
-- CREATE A FUNCTION NAMED HELLO THAT 
-- RETURNS "HELLO [NAME]!" FOR A GIVEN NAME
-- YOU CAN USE CONCAT FUNCTION
CREATE FUNCTION hello (e CHAR(20))
    RETURNS CHAR(50) DETERMINISTIC
    RETURN CONCAT('Hello, ',e,'!');
-- TEST YOUR FUNCTION
SELECT HELLO("BARIS");

-- 3.
-- CREATE A FUNCTION NAMED GETPOWER THAT RETURNS 
-- POWER OF A GIVEN POSITIVE INTEGER POWER VALUE AND
-- A GIVEN POSITIVE INTEGER BASE VALUE
-- CREATE YOUR OWN FUNCTION AND DO NOT USE BUILTIN POW OR POWER FUNCTIONS
DELIMITER $$
CREATE FUNCTION GETPOWER (basevalue INT, powervalue INT)
RETURNS INT
DETERMINISTIC
BEGIN
DECLARE result INT;
SET result = 1;
IF powervalue = 0 THEN RETURN 1;
END IF;
calculate: LOOP
SET result = result*basevalue;
SET powervalue = powervalue -1;
IF powerValue = 0 THEN LEAVE calculate;
END IF;
END LOOP calculate;
RETURN result;

END $$
DELIMITER ;



-- TEST YOUR FUNCTION
SELECT POWER(2,3);
SELECT GETPOWER(2,3);

-- 4.
-- CREATE A FUNCTION THAT RETURNS 
-- THE AVERAGE SALARY FOR A GIVEN JOB ON EMP TABLE
-- YOU CAN USE AVG FUNCTION
DELIMITER $$
CREATE FUNCTION AVGSAL (given_job VARCHAR(100))
RETURNS INT
DETERMINISTIC
BEGIN
DECLARE avgsal INT;
SELECT AVG(SAL) INTO avgsal  FROM EMP WHERE JOB = given_job;
RETURN avgsal;
END $$
DELIMITER ;
-- TEST YOUR FUNCTION
SELECT "CLERK" AS JOB, AVGSAL("CLERK");
SELECT JOB,AVG(SAL) FROM EMP GROUP BY JOB HAVING JOB="CLERK";

-- 5.
-- CREATE A FUNCTION NAMED GETSALGRADE THAT RETURNS APPROPRIATE GRADE 
-- FOR A GIVEN SALARY 
DELIMITER $$
CREATE FUNCTION GETSALGRADE(salary INT)
RETURNS INT
DETERMINISTIC
BEGIN
DECLARE calculated_grade INT;
SELECT GRADE INTO calculated_grade FROM SALGRADE WHERE salary BETWEEN LOSAL AND HISAL;
RETURN calculated_grade;
END $$
DELIMITER ;
-- TEST YOUR FUNCTION
SELECT ENAME, GRADE  FROM EMP, SALGRADE WHERE SAL BETWEEN LOSAL AND HISAL;
SELECT ENAME, GETSALGRADE(SAL) FROM EMP WHERE SAL IS NOT NULL; 

-- 6.
-- WRITE A QUERY THAT SELECTS
-- NAME, JOB, SALARY, AVERAGE SALARY FOR JOB OF EMPLOYEE  
-- WHOSE SALARY GRADE IS DIFFERENT FROM SALARY GRADE FOR AVERAGE SALARY OF JOB OF EMPLOYEE
SELECT ENAME,JOB,SAL,AVGSAL(JOB) FROM EMP WHERE GETSALGRADE(AVGSAL(JOB)) <> GETSALGRADE(SAL);
-- 7.MYSQL HAS MANY USEFUL BUILTIN FUNCTIONS
-- A.WRITE 3 EXAMPLES OF BUILTIN STRING FUNCTIONS YOU MAY FIND USEFUL
-- FOR EXAMPLE ASCII RETURNS ASCII VALUE OF A CHARACTER
SELECT ASCII("A"); -- RETURNS 65
-- YOUR EXAMPLE A1
SELECT CONCAT('HELLO ','world','!');
-- YOUR EXAMPLE A2
SELECT LENGTH('hello world');
-- YOUR EXAMPLE A3
SELECT SUBSTR('hello universe',10,14); 
-- B.WRITE 3 EXAMPLES OF BUILTIN NUMERIC FUNCTIONS YOU MAY FIND USEFUL
-- FOR EXAMPLE ABS RETURNS ABSOLUTE VALUE OF A NUMBER
SELECT ABS(-5); -- RETURNS 5
-- YOUR EXAMPLE B1
SELECT POWER(2,3);
-- YOUR EXAMPLE B2
SELECT FLOOR(105.86);
-- YOUR EXAMPLE B3
SELECT CEILING(105.86); 
-- C.WRITE 3 EXAMPLES OF BUILTIN DATE FUNCTIONS YOU MAY FIND USEFUL
-- FOR EXAMPLE DAYNAME RETURNS WEEKDAY OF A GIVEN DATE
SELECT DAYNAME("2020-05-04"); -- RETURNS MONDAY
-- YOUR EXAMPLE C1
SELECT ADDDATE('2020-05-07', INTERVAL 5 MONTH);
-- YOUR EXAMPLE C2
SELECT NOW();
-- YOUR EXAMPLE C3
SELECT STR_TO_DATE('07,2020,05','%d,%Y,%m');